/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-06-27 06:52:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title>Insert title here</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\theader{\r\n");
      out.write("\t\t\twidth: 100%;\r\n");
      out.write("\t\t\theight: 60px;\r\n");
      out.write("\t\t\tmargin: 0 auto;\r\n");
      out.write("\t\t\tpadding: 0;\r\n");
      out.write("\t\t\tfont-size: 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\theader div{\r\n");
      out.write("\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\tbox-sizing: border-box;\r\n");
      out.write("\t\t\theight: 100%;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t.header_left, .header_right{\r\n");
      out.write("\t\t\twidth: 6%;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t#img_header_left, #img_header_right{\r\n");
      out.write("\t\t\twidth: 60px;\r\n");
      out.write("\t\t\theight: 60px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.header_center{\r\n");
      out.write("\t\t\twidth: 88%;\r\n");
      out.write("\t\t\theight: 60px;\r\n");
      out.write("\t\t\ttext-align: center;\r\n");
      out.write("\t\t    position: relative;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.header_text, .header_icon{\r\n");
      out.write("\t\t\twidth: 100%;\r\n");
      out.write("\t\t    height: 60px;\r\n");
      out.write("\t\t    position: absolute;\r\n");
      out.write("\t\t    left: 0;\r\n");
      out.write("\t\t    text-align: right;\r\n");
      out.write("\t\t    padding-right: 50px;\r\n");
      out.write("\t\t\tdisplay: none;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.header_text span, .header_icon img{\r\n");
      out.write("\t\t\theight: 50%;\r\n");
      out.write("\t\t    margin-top: 15px;\r\n");
      out.write("\t\t    min-width: 30px;\r\n");
      out.write("\t\t    margin-right: 30px;\r\n");
      out.write("\t\t    font-size: 10pt;\r\n");
      out.write("\t\t    line-height: 60px;\r\n");
      out.write("\t\t    font-weight: bold;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("\t<script src=\"http://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t    const icon = $('.header_icon');\r\n");
      out.write("\t\t    const text = $('.header_text');\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    console.log('!width : '+$(window).width());\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    if($(window).width() < 1000) {\r\n");
      out.write("\t\t        icon.show();\r\n");
      out.write("\t\t    } else {\r\n");
      out.write("\t\t        text.show();\r\n");
      out.write("\t\t    }\r\n");
      out.write("\r\n");
      out.write("            $( window ).resize( function() {\r\n");
      out.write("               console.log('width : ' + $(window).width());\r\n");
      out.write("               if($(window).width() < 1000) {\r\n");
      out.write("                   text.hide();\r\n");
      out.write("\t\t\t\t\ticon.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t    icon.hide();\r\n");
      out.write("\t\t\t\t    text.show();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("               \r\n");
      out.write("            });\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<header>\r\n");
      out.write("\t\t\t<div class=\"header_left\">\r\n");
      out.write("\t\t\t\t<img id=\"img_header_left\" src=\"./resources/images/home.png\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"header_center\">\r\n");
      out.write("\t\t\t\t<div class=\"header_text\">\r\n");
      out.write("\t\t\t\t\t<span id=\"span_apple\">YOUTUBE</span>\r\n");
      out.write("\t\t\t\t\t<span id=\"span_plus\">PLUS</span>\r\n");
      out.write("\t\t\t\t\t<span id=\"span_youtube\">APPLE</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"header_icon\">\r\n");
      out.write("\t\t\t\t\t<img id=\"img_apple\" src=\"./resources/images/apple.png\">\r\n");
      out.write("\t\t\t\t\t<img id=\"img_plus\" src=\"./resources/images/plus.png\">\r\n");
      out.write("\t\t\t\t\t<img id=\"img_youtube\" src=\"./resources/images/youtube.png\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"header_right\">\r\n");
      out.write("\t\t\t\t<img id=\"img_header_right\" src=\"./resources/images/arrow.png\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
